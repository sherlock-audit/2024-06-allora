package inference_synthesis_test

import (
	"encoding/csv"
	"fmt"
	"strings"

	alloraMath "github.com/allora-network/allora-chain/math"
)

const simulatorHeaders = "returns,inference_0,inference_1,inference_2,inference_3,inference_4,forecasted_loss_0_for_0,forecasted_loss_0_for_1,forecasted_loss_0_for_2,forecasted_loss_0_for_3,forecasted_loss_0_for_4,forecasted_loss_1_for_0,forecasted_loss_1_for_1,forecasted_loss_1_for_2,forecasted_loss_1_for_3,forecasted_loss_1_for_4,forecasted_loss_2_for_0,forecasted_loss_2_for_1,forecasted_loss_2_for_2,forecasted_loss_2_for_3,forecasted_loss_2_for_4,forecast_implied_inference_0,forecast_implied_inference_1,forecast_implied_inference_2,forecast_implied_inference_0_oneout_0,forecast_implied_inference_0_oneout_1,forecast_implied_inference_0_oneout_2,forecast_implied_inference_0_oneout_3,forecast_implied_inference_0_oneout_4,forecast_implied_inference_1_oneout_0,forecast_implied_inference_1_oneout_1,forecast_implied_inference_1_oneout_2,forecast_implied_inference_1_oneout_3,forecast_implied_inference_1_oneout_4,forecast_implied_inference_2_oneout_0,forecast_implied_inference_2_oneout_1,forecast_implied_inference_2_oneout_2,forecast_implied_inference_2_oneout_3,forecast_implied_inference_2_oneout_4,network_inference,network_naive_inference,network_inference_oneout_0,network_inference_oneout_1,network_inference_oneout_2,network_inference_oneout_3,network_inference_oneout_4,network_inference_oneout_5,network_inference_oneout_6,network_inference_oneout_7,network_naive_inference_onein_0,network_naive_inference_onein_1,network_naive_inference_onein_2,network_loss,reputer_stake_0,reputer_stake_1,reputer_stake_2,reputer_stake_3,reputer_stake_4,reputer_0_loss_inference_0,reputer_0_loss_inference_1,reputer_0_loss_inference_2,reputer_0_loss_inference_3,reputer_0_loss_inference_4,reputer_1_loss_inference_0,reputer_1_loss_inference_1,reputer_1_loss_inference_2,reputer_1_loss_inference_3,reputer_1_loss_inference_4,reputer_2_loss_inference_0,reputer_2_loss_inference_1,reputer_2_loss_inference_2,reputer_2_loss_inference_3,reputer_2_loss_inference_4,reputer_3_loss_inference_0,reputer_3_loss_inference_1,reputer_3_loss_inference_2,reputer_3_loss_inference_3,reputer_3_loss_inference_4,reputer_4_loss_inference_0,reputer_4_loss_inference_1,reputer_4_loss_inference_2,reputer_4_loss_inference_3,reputer_4_loss_inference_4,reputer_0_loss_forecast_implied_inference_0,reputer_0_loss_forecast_implied_inference_1,reputer_0_loss_forecast_implied_inference_2,reputer_1_loss_forecast_implied_inference_0,reputer_1_loss_forecast_implied_inference_1,reputer_1_loss_forecast_implied_inference_2,reputer_2_loss_forecast_implied_inference_0,reputer_2_loss_forecast_implied_inference_1,reputer_2_loss_forecast_implied_inference_2,reputer_3_loss_forecast_implied_inference_0,reputer_3_loss_forecast_implied_inference_1,reputer_3_loss_forecast_implied_inference_2,reputer_4_loss_forecast_implied_inference_0,reputer_4_loss_forecast_implied_inference_1,reputer_4_loss_forecast_implied_inference_2,inference_loss_0,inference_loss_1,inference_loss_2,inference_loss_3,inference_loss_4,forecast_implied_inference_loss_0,forecast_implied_inference_loss_1,forecast_implied_inference_loss_2,inference_regret_worker_0,inference_regret_worker_1,inference_regret_worker_2,inference_regret_worker_3,inference_regret_worker_4,inference_regret_worker_5,inference_regret_worker_6,inference_regret_worker_7,inference_regret_worker_0_onein_0,inference_regret_worker_1_onein_0,inference_regret_worker_2_onein_0,inference_regret_worker_3_onein_0,inference_regret_worker_4_onein_0,inference_regret_worker_5_onein_0,inference_regret_worker_0_onein_1,inference_regret_worker_1_onein_1,inference_regret_worker_2_onein_1,inference_regret_worker_3_onein_1,inference_regret_worker_4_onein_1,inference_regret_worker_5_onein_1,inference_regret_worker_0_onein_2,inference_regret_worker_1_onein_2,inference_regret_worker_2_onein_2,inference_regret_worker_3_onein_2,inference_regret_worker_4_onein_2,inference_regret_worker_5_onein_2,reputer_0_loss_network_inference,reputer_1_loss_network_inference,reputer_2_loss_network_inference,reputer_3_loss_network_inference,reputer_4_loss_network_inference,network_loss_reputers"

func GetSimulatedValuesGetterForEpoch(
	epoch string,
) func(header string) alloraMath.Dec {
	r := csv.NewReader(strings.NewReader(simulatorHeaders + "\n" + epoch + "\n"))
	headersRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	valuesRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	simulatedValuesDec := make(map[string]alloraMath.Dec)
	if len(headersRead) != len(valuesRead) {
		panic("Header and values length mismatch")
	}
	for i := 0; i < len(headersRead); i++ {
		simulatedValuesDec[headersRead[i]] = alloraMath.MustNewDecFromString(valuesRead[i])
	}

	return func(header string) alloraMath.Dec {
		value, exists := simulatedValuesDec[header]
		if !exists {
			panic(fmt.Sprintf("Header '%s' not found in simulated values map", header))
		}
		return value
	}
}

func GetSimulatedValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	simulatorEpochs := map[int]string{
		0: "0.14734599092308542,0.09568027544066265,0.1363961722713124,0.28999212512190586,-0.043228157098207404,-0.08952427556667253,-2.4522483571827967,-3.9143259056607604,-0.9000652810336911,-1.6463473123710934,-1.7074338362858081,-3.6057839168272388,-3.3370374927703272,-1.8020705214436292,-0.4166286294086259,-0.6320114483270471,-2.2337117261065287,-2.9696871084391168,-2.600598385811391,0.2879310787880367,-2.393218206225104,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07340896618208459,0.06322999197442214,0.02483100376177378,0.10813607431680211,0.1197101039339184,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,0.07786322803380022,-2.275807620843759,217031.57378387608,216977.26497098248,191667.2084540071,165915.74025345925,192524.3792010807,-2.566939641403175,-3.9736265128811463,-1.6340360212984417,-1.4176728655687159,-1.2079652914565473,-2.6088805833404183,-4.000736871762039,-1.6890715035451003,-1.4317268105415675,-1.2617231938096802,-2.689672174984615,-3.9238074717070286,-1.5476152402605594,-1.8009740342405995,-1.1520002891011365,-2.7349150737829033,-4.03906759914352,-1.6070223223836477,-1.5228132940782646,-1.1307023134439265,-2.8117620659236184,-3.6409465030573775,-1.6136585227630547,-1.538615949883192,-1.1546136547916908,-2.31545419645954,-2.202524362738222,-2.2418613449256553,-2.463191636253571,-2.3117852658702835,-2.377847531291077,-2.307194877599067,-2.4421291055572634,-2.4565977821135654,-2.5007081332210515,-2.556704987343238,-2.4084782805129823,-2.2869687933477585,-2.096657210218583,-2.18113123428791,-2.6763048668905065,-3.915851167807982,-1.6207980063276026,-1.5368098127741545,-1.1854546887256259,-2.372078644284439,-2.3122813614294224,-2.329875537306649,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-2.246115755861928,-2.389726076391205,-2.4496588542454085,-2.0935493245943335,-2.1648829510940852,-2.275807620843759",
		1: "-0.05745793670163129,-0.04146077933409088,0.26430637626736225,-0.15537044892430302,0.20280570322915553,-0.2809213378134252,-2.6492671930352873,-1.095583070816085,-1.5996969055917107,-1.5636283897963263,-1.653693226447897,-3.1796232478126405,-1.9469176358512206,-3.340531306675051,-0.7430328122226876,-0.8004791268432215,-3.034331002898215,-0.03408752461993494,-1.4395724013525566,-1.5372154240009501,1.0002317318569662,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.0021280973150602624,-0.002128097315060258,-0.0021280973150602685,0.0034908572590869732,-0.04019016496969204,0.01976366720054584,-0.031404354535662524,0.03769950847042045,-0.00212809731506026,-0.00212809731506026,-0.00212809731506026,-0.0021280973150602676,-0.0021280973150602676,-0.0021280973150602676,-2.274668125579839,217283.78502898235,217289.19694563907,191831.07942219792,166101.3225773952,192706.52746252296,-2.453199488542913,-3.927474108646508,-1.5875734137853104,-1.413232962147433,-1.1645813959508593,-2.577129640134377,-4.013463196690888,-1.6225641793064787,-1.3927429446820159,-1.279568103423225,-2.7080537021907425,-4.050821038854415,-1.628754408936683,-1.685195119912563,-1.187854341176235,-2.6805643098631657,-3.844667147643489,-1.613528645869478,-1.3942731386256675,-1.2494959682102034,-2.6724445134599852,-3.789850883655542,-1.7549094862543286,-1.4826299763358262,-1.2615032689856926,-2.257223611729998,-2.2200021871391087,-2.3541839874974393,-2.4059121506439825,-2.3452453035112213,-2.290839580268419,-2.3163541655711244,-2.4115061571528535,-2.4199553202684294,-2.5648964075151084,-2.597414134132694,-2.33876846794408,-2.1857102145299496,-2.2027807687894683,-2.2922977412022663,-2.611371740777295,-3.9295762301302095,-1.6404157122893555,-1.472045223784453,-1.2277472419517825,-2.3394143060418964,-2.3451735658580337,-2.3383158364498526,0.9336703615197456,1.0654908104550371,0.8365747586709517,0.8197377098204615,0.7953079116371944,0.9064746180462058,0.9070505440278195,0.9063647710870014,0.9309667352298976,1.062787184165189,0.8338711323811037,0.8170340835306134,0.7926042853473463,0.9037709917563578,0.9288953786793933,1.0607158276146846,0.8317997758305993,0.8149627269801091,0.790532928796842,0.9022755611874671,0.9344740912985509,1.0662945402338422,0.8373784884497569,0.8205414395992666,0.7961116414159995,0.9071685008658066,-2.2374825510512,-2.379941301136895,-2.3792642036007,-2.1063368755238936,-2.2388642699960517,-2.274668125579839",
		2: "-0.07369649777428276,-0.002581909014417502,-0.040176235347061245,-0.16127260888226766,-0.2650234821483614,-0.22475663059136536,-1.4859617999114954,-1.9675342140709517,-1.5695832159168832,-1.0788764772284467,-1.9989928096438128,-3.069387034745436,-3.1516928820783194,-2.0399363729917765,-2.036254601993781,-2.5760515274013445,-1.596874381907372,-2.643181085845546,-1.882313219268639,-2.2415848872905446,-0.9728451247767491,-0.14477780535189463,-0.060588806924490625,-0.0777948896269554,-0.14446382944602051,-0.22190329490747623,-0.14269831871402658,-0.15143737364292906,-0.04232999665305955,-0.10030983096904408,-0.07843405536883943,-0.061049706994669946,-0.06023019324180175,-0.027316633117250966,-0.0820990078699989,-0.2517105722820825,-0.07992434748198993,-0.044059841825146225,-0.06449099700625044,-0.12212154598585173,-0.13876217319669462,-0.14544308932201702,-0.17224036474211574,-0.11660151861312741,-0.09778782750642696,-0.08617026602409554,-0.11888493750498845,-0.13091193728033187,-0.12845392546569404,-0.13976477855589464,-0.12573327881799398,-0.12860095926840479,-2.311951695696794,217597.3842463318,217692.82483220493,192068.1336344587,166331.77524345036,192991.09281801688,-2.794084752534733,-2.912821634455895,-1.666465324388764,-1.299483037447976,-1.2090755078850224,-2.915823629617737,-2.9853988644020046,-1.7479644345364538,-1.2582560150307411,-1.2482221909764606,-3.0263162379346786,-3.0088643777907707,-1.7447744585431957,-1.674889433292988,-1.1882842787996828,-3.0454528488179244,-2.882315026677848,-1.77611536413237,-1.3220364835770746,-1.3117571312313745,-2.95330515626394,-2.8950984623722817,-1.8514966966001682,-1.3636402989708447,-1.2870653407471915,-2.2824919560736756,-2.27604750292788,-2.375437672570877,-2.4221682862605367,-2.4008477647655777,-2.353153335799059,-2.4041089874731227,-2.402938933266083,-2.456237349098233,-2.511047796370679,-2.592673377511453,-2.3867542495649383,-2.2681895131640935,-2.252874586654308,-2.3254034947953484,-2.9396683187934354,-2.938920905232237,-1.7543662110182183,-1.3798148738257743,-1.2462295337518643,-2.372714760277605,-2.377126451246263,-2.378370796775388,0.9030749876774352,1.0216386503630779,0.697158734335999,0.6445502566513133,0.609204904278982,0.8219034626996663,0.8228629651799844,0.8223702040861607,0.8961365932849041,1.0147002559705465,0.690220339943468,0.6376118622587822,0.6022665098864509,0.8149650683071353,0.8921315394384668,1.0106952021241091,0.6862152860970304,0.633606808412345,0.5982614560400135,0.811919516941016,0.9000389822991514,1.0186026449847938,0.6941227289577151,0.6415142512730294,0.606168898900698,0.8193341987078768,-2.2622100195025574,-2.3935788818038666,-2.3997885341784317,-2.2004379345870424,-2.2846531825685865,-2.311951695696794",
		3: "-0.1086093599370808,-0.23772957272378142,-0.3206683838203465,-0.1560428348450878,-0.4522695690798907,0.07921662671338901,-1.279565042483667,-1.8023838212861185,-2.7290991574493773,-0.7001340374717215,-1.0548889133075208,-2.1944885298394747,-0.8098096442068731,-1.7294465073793757,-0.5897442364764094,-1.6379694537640836,-1.8694055734902197,-1.315823499632638,-1.9910129037951294,-0.2869443116578908,0.06935400567563284,-0.160814045646375,-0.21361052622371762,-0.19508283670791096,-0.16212555876400997,-0.15611725972199555,-0.3180367586629417,-0.1595848994697007,-0.16218707834777985,-0.07133982561352646,-0.2147559687551206,-0.21572517899542834,-0.2229180288842909,-0.22912953042140125,-0.16896027236611882,-0.18941964316840545,-0.24651734174578205,-0.19447347352664862,-0.19025843688736294,-0.20712514279171512,-0.2174987467511435,-0.1788842596822273,-0.1895883173686989,-0.24453288261639736,-0.1731715095080667,-0.24975505801795006,-0.213741013812478,-0.2061986594442862,-0.20884547223225858,-0.20805129656701546,-0.21685070999657255,-0.2137627617439381,-2.397976933603889,217979.4639591575,218230.41303770847,192348.6745232212,166636.52331905864,193372.38550049104,-2.6855836247833795,-2.895631339293046,-1.7499265266681285,-1.305485234369785,-1.3032707429834007,-2.7421144591057627,-2.9505249992351854,-1.8257754309573688,-1.30556830066608,-1.3611546391439875,-2.885122180844985,-2.992938824030687,-1.8295850098904913,-1.645045347805901,-1.2706527667399716,-2.865231705822166,-2.856048703054859,-1.9123237559680977,-1.3502439813378364,-1.421884969007282,-2.7646428879354983,-2.927587756580716,-1.9262754410236185,-1.4197555986390458,-1.389693127907496,-2.2746715201545284,-2.6149623099146035,-2.9267477734608,-2.386713312314167,-2.723162594245522,-2.9307019933765996,-2.4026224053892595,-2.824722964311828,-3.0310027678638476,-2.4278656164125545,-2.909127544569683,-2.9730341277180674,-2.344365371168986,-2.665330391667699,-2.9217220056414437,-2.7826346990946718,-2.926261527685881,-1.8440395387213715,-1.401469822223377,-1.3466012882056775,-2.363756697556609,-2.739099760933413,-2.9547250178869535,0.85123326545877,0.9723032447349692,0.5720491214141473,0.48044451984813075,0.4431468493112627,0.7362910928249717,0.7746889513949383,0.7958079921058511,0.849637175489637,0.970707154765836,0.5704530314450145,0.4788484298789978,0.4415507593421297,0.7346950028558388,0.8399615399874513,0.9610315192636504,0.5607773959428285,0.4691727943768122,0.43187512383994386,0.7634172259236198,0.8480953574082525,0.9691653366844517,0.5689112133636299,0.4773066117976134,0.4400089412607452,0.7926700840553337,-2.3339646732222823,-2.4654809471265686,-2.5026151611305756,-2.304042752993394,-2.3708157149747318,-2.397976933603889",
		4: "-0.07820530429866374,-0.12911369797464775,-0.11397392477038251,-0.08225794110992682,0.4610805983360889,-0.23530655241179554,-2.166853714746728,-2.576245963402976,-4.349173902509044,-0.43938276809029053,-1.5000564859721817,-1.7137371847840663,-1.9531097489250415,-4.036804071449624,-0.45324956367773916,-1.51684125685237,-1.606671039157792,-3.054773368674252,-3.568477363226547,1.1628093342120673,-1.4044356992194016,-0.08982289018214157,-0.085576769189513,-0.09760180963329405,-0.08788441197934317,-0.08683976402580357,-0.11881139087818007,-0.08941143892623116,-0.08807377579468788,-0.08520971918526718,-0.0850943010654436,-0.1256659449977992,-0.08496076568778924,-0.08395718909544994,-0.09778752609243001,-0.08965305186340788,-0.12038123238510387,-0.09444752902983974,-0.09492821206039456,-0.046593795564661394,-0.02015046264542463,-0.03450879460477692,-0.035312101444990904,-0.05474260284559858,-0.11843098097088428,-0.018797990550520293,-0.040464434121816203,-0.041061206903203924,-0.03933305429439983,-0.0316712721575273,-0.031005018693051223,-0.03300931159233445,-2.3373705451923175,218301.14640688157,218738.92512028269,192619.7535543401,166926.80025275325,193743.9630055712,-2.492243327000714,-2.574373154118222,-1.9092073404997798,-1.2347785453364006,-1.282179392226562,-2.51674728579474,-2.5965173111796442,-1.965549225632195,-1.2274360637849122,-1.3623779197962296,-2.6810056498295727,-2.682810825831458,-1.9764504388215496,-1.5552392172307439,-1.2999607211793762,-2.6527390954970684,-2.535888262399974,-2.0962933567165276,-1.277208708286648,-1.441831548639878,-2.586984067072113,-2.618562229787363,-2.0777427198290876,-1.3024257484398936,-1.3710043783361443,-2.3069242333810127,-2.4773564671452917,-2.7279302127138116,-2.406420124573918,-2.574033624803315,-2.778723284441589,-2.412667669313927,-2.6411440121037697,-2.863939332584613,-2.483038055278903,-2.7185789176829243,-2.789329263201476,-2.403334946842969,-2.5491262957020386,-2.77545988877269,-2.579957282585761,-2.60251348811571,-1.9992367668618922,-1.3158726149515678,-1.3476394558933475,-2.398014027432557,-2.5852671367534192,-2.7852506676899527,0.7903686126522373,0.9015872145538116,0.48103083143969005,0.33025027483924274,0.2998590554502394,0.6687263317664985,0.7220097154115547,0.7610152051450294,0.7941761173680879,0.9053947192696619,0.4848383361555408,0.3340577795550933,0.30366656016608995,0.6725338364823491,0.7845818289938989,0.8958004308954732,0.47524404778135165,0.32446349118090456,0.294072271791901,0.7162229317532166,0.7891776674737652,0.9003962693753395,0.479839886261218,0.32905932966077067,0.29866811027176726,0.7598242599665574,-2.269980294658679,-2.37457852498725,-2.454443922828192,-2.290939520005408,-2.294904565289994,-2.3373705451923175",
	}

	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range simulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch)
	}
	return gettersMap
}
